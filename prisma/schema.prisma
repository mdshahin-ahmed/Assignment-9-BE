generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String       @id @default(uuid())
  name         String
  email        String       @unique
  password     String
  bloodType    String
  location     String
  availability Boolean      @default(true)
  role         Role         @default(USER)
  userStatus   UserStatus   @default(ACTIVATE)
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  userProfile  UserProfile?
  donar        Request[]    @relation("donor_refer")
  requester    Request[]    @relation("requester_refer")

  @@map("users")
}

model UserProfile {
  id        String   @id @default(uuid())
  userId    String   @unique
  bio       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@map("userProfiles")
}

model Request {
  id String @id @default(uuid())

  donorId           String
  requesterId       String
  phoneNumber       String
  dateOfDonation    String
  hospitalName      String
  hospitalAddress   String
  reason            String
  requestStatus     Status   @default(PENDING)
  termsAndCondition Boolean
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  donor     User? @relation("donor_refer", fields: [donorId], references: [id])
  requester User? @relation("requester_refer", fields: [requesterId], references: [id])

  @@map("requests")
}

enum Status {
  PENDING
  APPROVED
  REJECTED
}

enum UserStatus {
  ACTIVATE
  DEACTIVATE
}

enum Role {
  ADMIN
  USER
}
